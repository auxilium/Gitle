<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>Gitle</value>
  </data>
  <data name="Authenticate_Failed" xml:space="preserve">
    <value>Login failed</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Login_Persistent" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="User_Name" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="User_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Address_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Address_Housenumber" xml:space="preserve">
    <value>House number</value>
  </data>
  <data name="Address_HousenumberExtension" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="Address_Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Address_Zipcode" xml:space="preserve">
    <value>Postal code</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="Customer_Add" xml:space="preserve">
    <value>Add customer</value>
  </data>
  <data name="Customer_InActive" xml:space="preserve">
    <value>Archived customers</value>
  </data>
  <data name="Name_Firstname" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Name_Lastname" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Name_Middlename" xml:space="preserve">
    <value>Prefix</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Address_City_Help" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Address_HousenumberExtension_Help" xml:space="preserve">
    <value>Any extension to the house number</value>
  </data>
  <data name="Address_Housenumber_Help" xml:space="preserve">
    <value>Only the number without extension</value>
  </data>
  <data name="Address_Street_Help" xml:space="preserve">
    <value>Name of the street</value>
  </data>
  <data name="Address_Zipcode_Help" xml:space="preserve">
    <value>Postal code format: '1111 XX'</value>
  </data>
  <data name="Name_Firstname_Help" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Name_Lastname_Help" xml:space="preserve">
    <value>Last name without any prefixes</value>
  </data>
  <data name="Name_Middlename_Help" xml:space="preserve">
    <value>Prefix e.g.: 'of' etc.</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="Customer_Active" xml:space="preserve">
    <value>Active customers</value>
  </data>
  <data name="Customer_RegisterDate" xml:space="preserve">
    <value>Registration date</value>
  </data>
  <data name="Customer_RegisterDate_Help" xml:space="preserve">
    <value>When is this person registered in the system</value>
  </data>
  <data name="Customer_RegisteredBy" xml:space="preserve">
    <value>Registered by</value>
  </data>
  <data name="Customer_Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Customer_RegisteredBy_Help" xml:space="preserve">
    <value>The person that registered this customer</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Activate</value>
  </data>
  <data name="At" xml:space="preserve">
    <value>at</value>
  </data>
  <data name="Choose" xml:space="preserve">
    <value>Choose</value>
  </data>
  <data name="Customer_Edit" xml:space="preserve">
    <value>Edit customer</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>yes</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Search_Customer" xml:space="preserve">
    <value>Search for a customer</value>
  </data>
  <data name="Address_Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Address_Note_Help" xml:space="preserve">
    <value>Any additional required information for pick-up</value>
  </data>
  <data name="Name_Initials" xml:space="preserve">
    <value>Initials</value>
  </data>
  <data name="Name_Initials_Help" xml:space="preserve">
    <value>Initials</value>
  </data>
  <data name="Name_Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Name_Gender_Help" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>change</value>
  </data>
  <data name="Clear_Search" xml:space="preserve">
    <value>Clear search results</value>
  </data>
  <data name="Mr" xml:space="preserve">
    <value>Mr.</value>
  </data>
  <data name="Ms" xml:space="preserve">
    <value>Ms.</value>
  </data>
  <data name="Sign_Out" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Month_Help" xml:space="preserve">
    <value>Choose a month</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Year_Help" xml:space="preserve">
    <value>Choose a year</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="NeedsSupport" xml:space="preserve">
    <value>Requires support</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Archived" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="Closed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Hold" xml:space="preserve">
    <value>On hold</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignIn_GitHub" xml:space="preserve">
    <value>Sign in with GitHub</value>
  </data>
  <data name="AddedAll" xml:space="preserve">
    <value>Added all</value>
  </data>
  <data name="Assigned" xml:space="preserve">
    <value>Assigned</value>
  </data>
  <data name="Assignee" xml:space="preserve">
    <value>Assignee</value>
  </data>
  <data name="BackToIndex" xml:space="preserve">
    <value>Back to overview</value>
  </data>
  <data name="Booked" xml:space="preserve">
    <value>Booked</value>
  </data>
  <data name="By" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="ChangeState_Opened" xml:space="preserve">
    <value>Opened</value>
  </data>
  <data name="ChangeState_Reopened" xml:space="preserve">
    <value>Reopened</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ClosedOn" xml:space="preserve">
    <value>Closed on</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Comment_New" xml:space="preserve">
    <value>New comment</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="ContainsLabel" xml:space="preserve">
    <value>Contains a label</value>
  </data>
  <data name="ContainsLabels" xml:space="preserve">
    <value>Contains labels</value>
  </data>
  <data name="ContainsNotLabels" xml:space="preserve">
    <value>Does not contain labels</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>Created on</value>
  </data>
  <data name="CustomerContacts" xml:space="preserve">
    <value>Customer contacts</value>
  </data>
  <data name="CustomerContacts_None" xml:space="preserve">
    <value>No customer contacts known</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Developers" xml:space="preserve">
    <value>Developers</value>
  </data>
  <data name="Developers_None" xml:space="preserve">
    <value>No developers found</value>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="Filter_New" xml:space="preserve">
    <value>New filter</value>
  </data>
  <data name="Full_Name" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="HandedOver" xml:space="preserve">
    <value>Handed over</value>
  </data>
  <data name="Issue" xml:space="preserve">
    <value>Issue</value>
  </data>
  <data name="IssueAction_Change_EmailSubject" xml:space="preserve">
    <value>Issue {1} was changed by {0}</value>
  </data>
  <data name="IssueAction_Change_Text" xml:space="preserve">
    <value>The issue was changed</value>
  </data>
  <data name="IssueAction_Comment_EmailSubject" xml:space="preserve">
    <value>A comment was placed on issue {1} by {0}</value>
  </data>
  <data name="IssueAction_HandOver_Text" xml:space="preserve">
    <value>The issue is handed over</value>
  </data>
  <data name="IssueAction_PickUp_Text" xml:space="preserve">
    <value>The issue is picked up</value>
  </data>
  <data name="Issues" xml:space="preserve">
    <value>Issues</value>
  </data>
  <data name="Issues_Move" xml:space="preserve">
    <value>Move issues</value>
  </data>
  <data name="Issues_Renumber" xml:space="preserve">
    <value>Renumber issues</value>
  </data>
  <data name="Issues_Selected" xml:space="preserve">
    <value>Selected issues</value>
  </data>
  <data name="Issue_Archive" xml:space="preserve">
    <value>Archive issue</value>
  </data>
  <data name="Issue_Close" xml:space="preserve">
    <value>Close issue</value>
  </data>
  <data name="Issue_Completed" xml:space="preserve">
    <value>Issue completed</value>
  </data>
  <data name="Issue_Edit" xml:space="preserve">
    <value>Edit issue</value>
  </data>
  <data name="Issue_Forward" xml:space="preserve">
    <value>Forward issue</value>
  </data>
  <data name="Issue_New" xml:space="preserve">
    <value>New issue</value>
  </data>
  <data name="Issue_OnHold" xml:space="preserve">
    <value>Issue on hold</value>
  </data>
  <data name="Issue_PickUp" xml:space="preserve">
    <value>Pickup issue</value>
  </data>
  <data name="Issue_Reopen" xml:space="preserve">
    <value>Reopen issue</value>
  </data>
  <data name="Labels" xml:space="preserve">
    <value>Labels</value>
  </data>
  <data name="Label_Add" xml:space="preserve">
    <value>Add label</value>
  </data>
  <data name="LastChanged" xml:space="preserve">
    <value>Last changed</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name_Required" xml:space="preserve">
    <value>Enter a name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="New_Password" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NoLabelsToFilter" xml:space="preserve">
    <value>No labels to filter</value>
  </data>
  <data name="NotAssigned" xml:space="preserve">
    <value>Not assigned</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="Notifications_NotSubscribed" xml:space="preserve">
    <value>You are not receiving notifications.</value>
  </data>
  <data name="Notifications_OnlyOwnTickets" xml:space="preserve">
    <value>Only of tickets created by yourself</value>
  </data>
  <data name="Notifications_Receive" xml:space="preserve">
    <value>Receive notifications</value>
  </data>
  <data name="Notifications_Subscribed" xml:space="preserve">
    <value>You are receiving notifications.</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="OnHold" xml:space="preserve">
    <value>On hold</value>
  </data>
  <data name="OnlyCurrentProject" xml:space="preserve">
    <value>Only current project</value>
  </data>
  <data name="Password_Change_Error_Expired" xml:space="preserve">
    <value>This link has expired.</value>
  </data>
  <data name="Password_Change_Error_Mismatch" xml:space="preserve">
    <value>The passwords are not the same. Please try again.</value>
  </data>
  <data name="Password_Change_Sent" xml:space="preserve">
    <value>An email has been sent to the address if it was found in the system.</value>
  </data>
  <data name="Password_Change_Success" xml:space="preserve">
    <value>Your password was changed successfully. You can now log in with your new password.</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PickedUp" xml:space="preserve">
    <value>Picked up</value>
  </data>
  <data name="PlaceComment" xml:space="preserve">
    <value>Place comment</value>
  </data>
  <data name="Profile_Edit" xml:space="preserve">
    <value>Edit profile</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Projects_ShowClosed" xml:space="preserve">
    <value>Show closed projects</value>
  </data>
  <data name="Project_Closed" xml:space="preserve">
    <value>This project is closed, no new tickets can be created.</value>
  </data>
  <data name="Project_Details" xml:space="preserve">
    <value>Project details</value>
  </data>
  <data name="Project_Information" xml:space="preserve">
    <value>Project information</value>
  </data>
  <data name="Project_Name_AlreadyExists" xml:space="preserve">
    <value>This name is already in use, please choose a different one</value>
  </data>
  <data name="Project_Name_Required" xml:space="preserve">
    <value>Enter a name</value>
  </data>
  <data name="SaveAndNew" xml:space="preserve">
    <value>Save and new</value>
  </data>
  <data name="SignedInAs" xml:space="preserve">
    <value>Signed in as</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="TaskList" xml:space="preserve">
    <value>Issue list</value>
  </data>
  <data name="Tasks_All" xml:space="preserve">
    <value>All issues</value>
  </data>
  <data name="Tasks_Completed" xml:space="preserve">
    <value>Completed issues</value>
  </data>
  <data name="Tasks_Open" xml:space="preserve">
    <value>Open issues</value>
  </data>
  <data name="Tasks_Progress" xml:space="preserve">
    <value>Progress of issues</value>
  </data>
  <data name="TheIssue" xml:space="preserve">
    <value>The issue</value>
  </data>
  <data name="Timeline" xml:space="preserve">
    <value>Timeline</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Unbooked" xml:space="preserve">
    <value>Unbooked</value>
  </data>
  <data name="UploadDate" xml:space="preserve">
    <value>Upload date</value>
  </data>
  <data name="Uploader" xml:space="preserve">
    <value>Uploader</value>
  </data>
  <data name="Openend_On" xml:space="preserve">
    <value>opened on</value>
  </data>
  <data name="Since" xml:space="preserve">
    <value>since</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="Assigned_To" xml:space="preserve">
    <value>Assigned to</value>
  </data>
  <data name="Billed" xml:space="preserve">
    <value>Billed</value>
  </data>
  <data name="Estimate" xml:space="preserve">
    <value>Estimate</value>
  </data>
  <data name="Estimated_Price" xml:space="preserve">
    <value>Estimated budget</value>
  </data>
  <data name="Estimated_Time" xml:space="preserve">
    <value>Estimated time</value>
  </data>
  <data name="Estimate_Public" xml:space="preserve">
    <value>Estimate Public</value>
  </data>
  <data name="Invoice_Numbers" xml:space="preserve">
    <value>Invoice number(s)</value>
  </data>
  <data name="Pickup" xml:space="preserve">
    <value>Pickup</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Issues</value>
  </data>
  <data name="Upload_picture_file" xml:space="preserve">
    <value>Upload picture/file</value>
  </data>
  <data name="Urgent" xml:space="preserve">
    <value>Urgent</value>
  </data>
  <data name="Urgent_Issues" xml:space="preserve">
    <value>Urgent Issues</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>hour(s)</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="Choose_Customer" xml:space="preserve">
    <value>Choose customer</value>
  </data>
  <data name="Label_Add_Change" xml:space="preserve">
    <value>Change label</value>
  </data>
  <data name="IssueAction_Delete_Urgent" xml:space="preserve">
    <value>open, urgent status deleted</value>
  </data>
  <data name="Label_Required" xml:space="preserve">
    <value>minimal 1 label required</value>
  </data>
  <data name="Administrative" xml:space="preserve">
    <value>Administrative</value>
  </data>
  <data name="Comment_Count" xml:space="preserve">
    <value>Comments count</value>
  </data>
  <data name="Created_At" xml:space="preserve">
    <value>Created at</value>
  </data>
  <data name="Created_By" xml:space="preserve">
    <value>Created by</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Picked_Up_At" xml:space="preserve">
    <value>Picked up at</value>
  </data>
  <data name="Picked_Up_By" xml:space="preserve">
    <value>Picked up by</value>
  </data>
  <data name="Total_Hours" xml:space="preserve">
    <value>Total hours</value>
  </data>
  <data name="Hide_Projects_Without_Tickets" xml:space="preserve">
    <value>Hide all projects without issues</value>
  </data>
  <data name="Initial_Projects" xml:space="preserve">
    <value>Initial projects</value>
  </data>
  <data name="New_Filter_Preset" xml:space="preserve">
    <value>New filter preset</value>
  </data>
  <data name="Service_Projects" xml:space="preserve">
    <value>Service projects</value>
  </data>
  <data name="Show_All_Tickets" xml:space="preserve">
    <value>Show all issues</value>
  </data>
  <data name="Issues_Move_Label" xml:space="preserve">
    <value>Move issues to a different project</value>
  </data>
</root>